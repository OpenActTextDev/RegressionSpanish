#  FILENAME IS Chap5RFigures.txt ;


#setwd("R://Book3//CUPBook//Chapter5")
setwd("c://Book3//CUPBook//Chapter5")
library(HH)

#  FIGURE 5.1
postscript("F5Iterative.ps", width=6,height=3)
plot.new()
par(mar=c(0,0,0,0), cex=1.1)
plot.window(xlim=c(0,18),ylim=c(-5,5))

text(1,3,labels="DATA",adj=0, cex=0.8)
text(1,0,labels="PLOTS",adj=0, cex=0.8)
text(1,-3,labels="THEORY",adj=0, cex=0.8)
text(3.9,0,labels="MODEL\nFORMULATION",adj=0, cex=0.8)
text(8.1,0,labels="FITTING",adj=0, cex=0.8)
text(11,0,labels="DIAGNOSTIC\nCHECKING",adj=0, cex=0.8)
text(15,0,labels="INFERENCE",adj=0, cex=0.8)
text(14.1,0.5,labels="OK",adj=0, cex=0.6)

rect(0.8,2.0,2.6,4.0)
arrows(1.7,2.0,1.7,1.0,code=2,lwd=2,angle=25,length=0.10)
rect(0.8,-1.0,2.6,1.0)
arrows(1.7,-2.0,1.7,-1.0,code=2,lwd=2,angle=25,length=0.10)
rect(0.8,-4.0,2.6,-2.0)

arrows(2.6,0,3.2,0,code=2,lwd=2,angle=25,length=0.10)

x<-c(5,7.0,5,3.2)
y<-c(2,0,-2,0)
polygon(x,y)
arrows(7.0,0,8.0,0,code=2,lwd=2,angle=25,length=0.10)

rect(8.0,-1.0,9.7,1.0)
arrows(9.7,0,10.2,0,code=2,lwd=2,angle=25,length=0.10)

x1<-c(12,14.0,12,10.2)
y1<-c(2,0,-2,0)
polygon(x1,y1)
arrows(14.0,0,14.8,0,code=2,lwd=2,angle=25,length=0.10)

rect(14.8,-1.0,17.5,1.0)
arrows(12,-2.0,12,-3,code=2,lwd=2,angle=25,length=0.10)
arrows(12,-3.0,5,-3,code=2,lwd=2,angle=25,length=0.10)
arrows(5,-3.0,5,-2,code=2,lwd=2,angle=25,length=0.10)
export.eps("F5Iterative.eps", width=8,height=4) 
dev.off()

#  FIGURE 5.2
postscript("F5LiquidPlot.ps")
liquidity = read.csv(choose.files(),  quote = "",header=TRUE)
attach(liquidity )
Xymat<-data.frame(AVGT,NTRAN,PRICE,SHARE,VALUE,DEBEQ,VOLUME)
pairs(Xymat,upper.panel=NULL,cex=1.5,
          xaxt="n",yaxt="n",pch=".",gap=0,cex.labels=0.8)
export.eps("F5LiquidPlot.eps", width=6,height=4)
dev.off()

#  #  FIGURE 5.3
model2 <- lm(VOLUME~AVGT+NTRAN,data=Xymat)
summary(model2)

postscript("F5LiquidResidPlot.ps", width=6,height=3)
op<-par(no.readonly = TRUE)
layout(matrix(c(1,2,3,4,5,6,7,8,9,10),byrow=TRUE,ncol=5))
par("oma"=c(3,3,3,3),"mai"=c(0,0,0.1,0),cex=0.8)
plot.new()
hist(PRICE,breaks=18,main="PRICE",xaxt="n",yaxt="n",xlab="",ylab="", 
                cex.main = 1, font.main= 1)
hist(SHARE,breaks=12,main="SHARE",xaxt="n",yaxt="n",xlab="",ylab="", 
                cex.main = 1, font.main= 1)
hist(VALUE,breaks=12,main="VALUE",xaxt="n",yaxt="n",xlab="",ylab="", 
                cex.main = 1, font.main= 1)
hist(DEBEQ,breaks=12,main="DEBEQ",xaxt="n",yaxt="n",xlab="",ylab="", 
                cex.main = 1, font.main= 1)
hist(model2$residuals,breaks=20,main="Residuals",
   xaxt="n",yaxt="n",xlab="",ylab="",cex.main = 1, font.main= 1)
plot(PRICE,model2$residuals,xaxt="n",yaxt="n",xlab="",ylab="")
plot(SHARE,model2$residuals,xaxt="n",yaxt="n",xlab="",ylab="")
plot(VALUE,model2$residuals,xaxt="n",yaxt="n",xlab="",ylab="")
plot(DEBEQ,model2$residuals,xaxt="n",yaxt="n",xlab="",ylab="")
export.eps("F5LiquidResidPlot.eps", width=8,height=4)
dev.off()


#  FIGURE 5.4
library(cluster)
library(MASS)

postscript("F5Ellipsoid.ps")
par(mar=c(3.2,5.4,.2,.2))
plot(1,5,type="p",pch=19,cex=1.5,xlab="",ylab="",cex.lab=1.5,xaxt="n",yaxt="n",xlim=c(-3,5),ylim=c(-12,12))
mtext(expression(x[2]), side=1,line=2, cex=2.0)
mtext(expression(x[1]), side=2, line=2, las=2, cex=2.0)
arrows(1.5,5,4,5,code=1,lwd=2,angle=15,length=0.25)
xycov<-matrix(c(2, -5,-5, 20),nrow=2,ncol=2)
xyloc<-matrix(c(0, 0),nrow=1,ncol=2)
polygon(ellipsoidPoints(xycov, d2 = 2, loc=xyloc),col="black")
export.eps("F5Ellipsoid.eps", width=6,height=4)
dev.off()


#  FIGURE 5.5
x<-seq(0,80,lengh=81)
y<--(x-60)^2+2000
postscript("F5Nearlinear.ps")
par(mar=c(3.2,5.4,.2,.2))
plot(x,y,type="l",xlim=c(15,90),ylim=c(-1500,2500),xaxt="n",
    yaxt="n",xlab="",ylab="",cex.lab=1.5)
mtext(expression(x[2]), side=1, line=2, cex=2)
mtext(expression(x[1]), side=2, line=2, las=1,cex=2)
points(20,400,pch=1,cex=2)
points(22,556,pch=1,cex=2)
points(35,1375,pch=1,cex=2)
points(37,1471,pch=1,cex=2)
points(39,1559,pch=1,cex=2)
points(45,1775,pch=1,cex=2)
export.eps("F5Nearlinear.eps", width=6,height=4)
dev.off()

#  FIGURE 5.6
postscript("F5CollMask.ps", width=6,height=6)
.Random.seed <- 1:15
x<-runif(15,min=0,max=1)
y<-runif(15,min=-0.1,max=0.1)+1-x
par(mar=c(3.2,4.4,.2,.2))
plot(x,y,type="p",pch=1,cex=1.5,xlim=c(0,1.2),
   ylim=c(-0.1,1.4),xaxt="n",yaxt="n",xlab="",ylab="",cex.lab=1)
mtext(expression(x[2]), side=1, line=2,cex=1.4)
mtext(expression(x[1]), side=2, line=2, cex=1.4, las=1)
points(0.8,1,pch=1,cex=1.5)
arrows(0.55,1.1,0.75,1.02,code=2,lwd=2,angle=5,length=0.15)
text(0.6,1.2,"HIGH LEVERAGE,COLLINEARITY\nMASKING POINT",cex=1.0)
export.eps("F5CollMask.eps", width=4,height=4)
dev.off()

#  FIGURE 5.7
postscript("F5CollInduce.ps", width=6,height=6)
.Random.seed <- 1:15
x<-runif(18,min=0,max=1.2)
y<-runif(18,min=0,max=1.2)
par(mar=c(3.2,4.4,.2,.2))
plot(x,y,type="p",pch=1,cex=1.5,xlim=c(0,3),
   ylim=c(0,3),xaxt="n",yaxt="n",xlab="",ylab="",cex.lab=1)
mtext(expression(x[2]), side=1, line=2,cex=1.4)
mtext(expression(x[1]), side=2, line=2, cex=1.4, las=1)
points(2,2,pch=1,cex=1.5)
arrows(1.4,2.25,1.9,2.05,code=2,lwd=2,angle=5,length=0.15)
text(1.5,2.5,"HIGH LEVERAGE,COLLINEARITY\nCREATING POINT",cex=1.0)
export.eps("F5CollInduce.eps", width=4,height=4)
dev.off()

#  FIGURE 5.8
postscript("F5Suppress.ps", width=6,height=6)
Sigma<-matrix(c(1,0.972,0.188,0.972,1,-0.022,0.188,-0.022,1),3,3)
Sigma
.Random.seed <- 1:40
x1x2y<-mvrnorm(n=40,rep(0,3),Sigma,empirical=TRUE)

pairs(x1x2y,upper.panel=NULL,xaxt="n",yaxt="n",
     labels=expression(x[1],x[2],y),pch=1,gap=0,cex.labels=1.5)
export.eps("F5Suppress.eps", width=5,height=4)
dev.off()

#  FIGURE 5.9
postscript("F5ModelValidation.ps", width=8,height=4)

op <- par(no.readonly = TRUE)
par(mai=c(0,0.1,0,0))
plot.new()
plot.window(xlim=c(0,18),ylim=c(-10,10))
rect(1,-1.2,14,1.2)
rect(7,4,15,8)
rect(1,-8,6,-4)
x<-seq(1.5,9,length=6)
y<-rep(0,6)
text(x,y,labels=c(1:6),cex=1.5)
x1<-seq(10.5,11.5,length=3)
y1<-rep(0,3)
text(x1,y1,labels=rep(".",3),cex=3)
text(13,0,labels="n",cex=1.5)

text(15,0,labels="ORIGINAL\nSAMPLE\nSIZE n",adj=0)
text(7.5,6,labels="MODEL DEVELOPMENT\nSUBSAMPLE SIZE",adj=0)
text(11.1,5.3, expression(n[1]), adj=0, cex=1.1)
text(1.4,-6,labels="VALIDATION\nSUBSAMPLE\nSIZE",adj=0)
text(2.4,-7.2,expression(n[2]),adj=0, cex=1.1)

arrows(1.8,0.8,8.3,3.9,code=2,lwd=2,angle=15,length=0.2)
arrows(4.8,0.8,9,3.8,code=2,lwd=2,angle=15,length=0.2)
arrows(9.1,0.9,9.5,3.8,code=2,lwd=2,angle=15,length=0.2)
arrows(12.8,0.8,10,3.8,code=2,lwd=2,angle=15,length=0.2)
arrows(2.9,-0.9,2.5,-3.8,code=2,lwd=2,angle=15,length=0.2)
arrows(5.9,-0.9,3.1,-3.8,code=2,lwd=2,angle=15,length=0.2)
arrows(7.4,-0.9,3.5,-3.8,code=2,lwd=2,angle=15,length=0.2)
export.eps("F5ModelValidation.eps", width=8,height=4)
dev.off()

#  FIGURE 5.10
postscript("F5HeteroRegress.ps", width=6,height=6)

x<-seq(5,28,length=24)
y<-0.5*x-3
par(mar=c(3.2,4.4,.2,.2))
plot(0,0,type="l",xlim=c(8,30),ylim=c(0.5,13),
     xlab="",ylab="",xaxt="n",yaxt="n",cex.lab=1.5)
mtext("x", side=1,line=2, cex=1.4)
mtext("y", side=2,lin=2,las=1,cex=1.4)
error<-matrix(c(1,0.1,2,0.3,2.5,0.4,3,0.65,3.8,0.8,4,1,4.5,1,5,1.2,5.5,1.3,6,1.5,6.5,1.6,7,1.65,8,2.2,8.5,2.7,9,3,9,-3,8.5,-2.6,7.5,-2.2,7,-2.1,6.5,-1.7,6,-1.6,5.6,-1.5,5,-1.2,4.6,-1,4,-0.9,3.5,-0.6,3,-0.5,2.8,-0.3,2,-0.2,1,-0.1),ncol=2,byrow=TRUE)
xycor<-cbind((error[,1]+3)*2,error[,1]+error[,2])
polygon(xycor,col="grey")
lines(x,y)
export.eps("F5HeteroRegress.eps", width=4,height=4)
dev.off()

#  FIGURE 5.11
postscript("F5HeteroResid.ps", width=6,height=6)
x<-seq(0,10,length=11)
y<-seq(0,0,length=11)
par(mar=c(3.2,4.4,.2,.2))
plot(0,0,type="l",xlim=c(1.2,12),ylim=c(-6,6),
  xlab="",ylab="",
  xaxt="n",yaxt="n",cex.lab=1.2)
mtext(expression(e), las=1, side=2,line=2,cex=1.4)
mtext(expression(hat(y)), side=1,line=2,cex=1.4)
error<-matrix(c(1,0.1,2,0.3,2.5,0.4,3,0.65,3.8,0.8,4,1,4.5,1,5,1.2,5.5,1.3,6,1.5,6.5,1.6,7,1.65,8,2.2,8.5,2.7,9,3,9,-3,8.5,-2.6,7.5,-2.2,7,-2.1,6.5,-1.7,6,-1.6,5.6,-1.5,5,-1.2,4.6,-1,4,-0.9,3.5,-0.6,3,-0.5,2.8,-0.3,2,-0.2,1,-0.1),ncol=2,byrow=TRUE)
polygon(error,col="grey")
lines(x,y)
export.eps("F5HeteroResid.eps", width=4,height=4)
dev.off()

#  FIGURE 5.12
postscript("F1Transform.ps")
z <- seq(-3, 3, 0.01)
YJTrans <- function(lambda)
{ lambda0 <- lambda+(lambda==0)
 lambda2 <- lambda+(lambda==2)
 yp <- (lambda==0)*log(1+abs(z))+(lambda!=0)*((1+abs(z))^lambda0-1)/lambda0
 yn <- -(lambda==2)*log(1+abs(z))-(lambda!=2)*((1+abs(z))^(2-lambda2)-1)/(2-lambda2)
 foo <- yp*(z>=0)+yn*(z<0) 
 foo}

par(mar=c(3.2,3.2,2.2,0.2),cex=1.3)
plot(z, YJTrans(0), xlim=c(-3, 3), ylim=c(-3, 3), type="l", ylab="", xlab="", lty=1, las=1)
mtext("Transformed Values", at=3.5, side=2, las=1, adj=0.35, cex=1.3)
mtext("Original Values", side=1, line=2, cex=1.3)
lines(z, YJTrans(0.5), lty=2)
abline(0, 1, lty=3)
lines(z, YJTrans(1.5), lty=4)
lines(z, YJTrans(2), lty=5)
export.eps("F5Transform.eps", width=5,height=4)
dev.off()




